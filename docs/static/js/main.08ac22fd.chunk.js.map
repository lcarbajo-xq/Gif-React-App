{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","onChange","target","value","type","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAS,IACtBP,GAAc,SAACQ,GAAD,OAAWN,GAAX,mBAA0BM,OACxCL,EAAc,MAKhB,SACE,uBAAOM,SAde,SAACJ,GACzBF,EAAcE,EAAEK,OAAOC,QAaeC,KAAK,OAAOD,MAAOT,O,+BCpBhDW,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAXjB,kBAcdL,GAdc,4CAAH,sDCEPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,sBAAKI,UAAU,6CAAf,UACE,qBAAKC,IAAKN,EAAOO,IAAKN,IACtB,4BAAID,QCFGQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACX,GACtBS,EAAS,CACPhB,KAAMO,EACNO,SAAS,SAGZ,CAACrB,IAEGsB,EDd2BI,CAAa1B,GAAjCc,EADyB,EAC/BP,KAAcc,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAuDjB,IACtDqB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SACGH,EAAOL,KAAI,SAACkB,GACX,OAAO,cAAC,EAAD,eAAgCA,GAAdA,EAAMhB,aEQ1BiB,EAjBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,cADrB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG2C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,YCR5C8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.08ac22fd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input onChange={handleInputChange} type=\"text\" value={inputValue} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const URL = `https://api.giphy.com/v1/gifs/search?api_key=dEbMsurtXCLZR6TFeNx06HVpKny9ysjJ&q=${encodeURI(\n    category\n  )}&limit=10`;\n  const resp = await fetch(URL);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInLeft\">\n      <img alt={title} src={url} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>\n      {loading && <p>Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((image) => {\n          return <GifGridItem key={image.id} {...image} />;\n        })}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((images) => {\n      setState({\n        data: images,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n  // const [images, setImages] = useState([]);\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}